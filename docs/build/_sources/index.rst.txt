.. Metadata Transformations Framework documentation master file, created by
   sphinx-quickstart on Wed Aug 21st 2025.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

Metadata Transformations Framework
=========================

This program provides a data transformation framework for working with tables (DataFrames) in PySpark, Pandas, or Polars. It tracks all transformations and important events in a structured, auditable way using JSON logs.

.. raw:: html



Description
=========================

This framework makes your data pipeline transparent and auditable by logging every important action as a structured JSON event. You can trace exactly what happened to each table, when, and why. The framework provides three main approaches for managing tables:

1. **Direct table loading** with `MetaFrame` for single table operations

2. **Payload-based loading** with `SupplyLoad` for configuration-driven multi-table loading

3. **Collection management** with `Tablecollection` for flexible multi-table operations

Each approach provides the same event tracking and audit capabilities while offering different levels of control and automation for your specific use case.

.. toctree::
   :maxdepth: 2
   :caption: Contents:

Dependencies
=========================

* polars
* pandas
* pyspark
* sas-to-polars
* sparkpolars
* uainepydat



events.eventlog
===============

.. automodule:: events.eventlog
   :members:

events.jsonlog
==============

.. automodule:: events.jsonlog
   :members:

events.pipeevent
================

.. automodule:: events.pipeevent
   :members:

tables.collections.collection
=============================

.. automodule:: tables.collections.collection
   :members:

tables.collections.supply_load
==============================

.. automodule:: tables.collections.supply_load
   :members:

tables.metaframe
================

.. automodule:: tables.metaframe
   :members:

tables.multitable
=================

.. automodule:: tables.multitable
   :members:

tables.names.headername
=======================

.. automodule:: tables.names.headername
   :members:

tables.names.lists
==================

.. automodule:: tables.names.lists
   :members:

tables.names.tablename
======================

.. automodule:: tables.names.tablename
   :members:

transforms.base
===============

.. automodule:: transforms.base
   :members:

transforms.lib
==============

.. automodule:: transforms.lib
   :members:


Release History
=========================

Version 1.0
^^^^^^^^^^^^^
* Release
