{
  "log_info": {
    "filepath": "../test_tables/positions.csv",
    "table_name": "",
    "src_format": "csv"
  },
  "uuid": "44ca817b-0ada-49b6-8882-fea977e465cc",
  "timestamp": "2025-09-05T02:27:50.522775+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "load",
  "event_description": "Loaded  from ../test_tables/positions.csv",
  "meta_version": "1.0",
  "class_type": "PipelineEvent"
}
{
  "log_info": {
    "input_tables": [
      "positions"
    ],
    "output_tables": [
      "positions"
    ],
    "input_variables": [
      [
        "VAR"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": [
      [
        "VAR"
      ]
    ],
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "1351c2d0-3d1a-4ee7-a898-cea697516697",
  "timestamp": "2025-09-05T02:27:52.741199+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "transform",
  "event_description": "Removes specified variable(s) from a dataframe",
  "meta_version": "1.0",
  "name": "DropVariable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.33.0",
  "version_pandas": "2.3.2",
  "version_python": "3.11.9",
  "params": {
    "df": "positions"
  },
  "transform_id": "DropVar",
  "target_tables": [
    "positions"
  ],
  "target_variables": [
    "VAR"
  ],
  "deleted_variables": [
    "VAR"
  ],
  "class_type": "DropVariable"
}
{
  "log_info": {
    "input_tables": [
      "positions"
    ],
    "output_tables": [
      "positions"
    ],
    "input_variables": [],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "75461dc1-af96-452d-8ee8-0a8ab4bf109a",
  "timestamp": "2025-09-05T02:27:52.911921+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "transform",
  "event_description": "Removes duplicate rows from a DataFrame",
  "meta_version": "1.0",
  "name": "DistinctTable",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.33.0",
  "version_pandas": "2.3.2",
  "version_python": "3.11.9",
  "params": {
    "df": "positions"
  },
  "transform_id": "DistinctTbl",
  "target_tables": [
    "positions"
  ],
  "target_variables": [],
  "class_type": "DistinctTable"
}
{
  "log_info": {
    "input_tables": [
      "positions",
      "salary"
    ],
    "output_tables": [
      "example_join"
    ],
    "input_variables": [
      [
        "AGE"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "num_input_frames": 2,
    "num_output_frames": 1
  },
  "uuid": "51235d23-aa70-446d-b996-85506f9580af",
  "timestamp": "2025-09-05T02:27:53.962855+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "transform",
  "event_description": "Joins positions and salary on AGE (inner)",
  "meta_version": "1.0",
  "name": "JoinTable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.33.0",
  "version_pandas": "2.3.2",
  "version_python": "3.11.9",
  "params": {
    "output_table": "example_join"
  },
  "transform_id": "JoinTbl",
  "target_tables": [
    "example_join"
  ],
  "target_variables": [
    "AGE"
  ],
  "left_table": "positions",
  "right_table": "salary",
  "join_columns": [
    "AGE"
  ],
  "join_type": "inner",
  "suffixes": [
    "_left",
    "_right"
  ],
  "class_type": "JoinTable"
}
{
  "log_info": {
    "input_tables": [
      "example_join"
    ],
    "output_tables": [
      "example_join"
    ],
    "input_variables": [
      [
        "INCOME"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "10885505-ede1-4b1d-8a5c-c6ec3faa829e",
  "timestamp": "2025-09-05T02:27:54.744349+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "transform",
  "event_description": "Filters rows where INCOME > 600",
  "meta_version": "1.0",
  "name": "SimpleFilter",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.33.0",
  "version_pandas": "2.3.2",
  "version_python": "3.11.9",
  "params": {
    "df": "example_join"
  },
  "transform_id": "SimpleFilter",
  "target_tables": [
    "example_join"
  ],
  "target_variables": [
    "INCOME"
  ],
  "column": "INCOME",
  "op": ">",
  "value": 600,
  "class_type": "SimpleFilter"
}
{
  "log_info": {
    "input_tables": [
      "example_join"
    ],
    "output_tables": [
      "example_join"
    ],
    "input_variables": [
      [
        "AGE",
        "SKILL"
      ]
    ],
    "output_variables": [
      "CONCATTED"
    ],
    "created_variables": [
      "CONCATTED"
    ],
    "renamed_variables": null,
    "removed_variables": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "eb30aff1-f504-49c6-ba42-f014e5b35a25",
  "timestamp": "2025-09-05T02:27:55.042379+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "transform",
  "event_description": "Concatenante multiple columns together in a dataframe",
  "meta_version": "1.0",
  "name": "ConcatColumns",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.33.0",
  "version_pandas": "2.3.2",
  "version_python": "3.11.9",
  "params": {
    "df": "example_join",
    "output_var": "CONCATTED"
  },
  "transform_id": "ConcCols",
  "target_tables": [
    "example_join"
  ],
  "target_variables": [
    "AGE",
    "SKILL"
  ],
  "separator": "_",
  "class_type": "ConcatColumns"
}
{
  "log_info": {
    "input_tables": [
      "example_join"
    ],
    "output_tables": [
      "example_join"
    ],
    "input_variables": [
      "INCOME"
    ],
    "output_variables": [
      "INCOME"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "8fd4b81a-c3ca-4929-80cd-87c0cf7f4522",
  "timestamp": "2025-09-05T02:27:55.330105+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "transform",
  "event_description": "Replaces values in 'INCOME' where INCOME >= 610 with 600",
  "meta_version": "1.0",
  "name": "ReplaceByCondition",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.33.0",
  "version_pandas": "2.3.2",
  "version_python": "3.11.9",
  "params": {
    "df": "example_join"
  },
  "transform_id": "ReplCond",
  "target_tables": [
    "example_join"
  ],
  "target_variables": [
    "INCOME"
  ],
  "column": "INCOME",
  "op": ">=",
  "value": 610,
  "replacement": 600,
  "class_type": "ReplaceByCondition"
}
{
  "log_info": {
    "filepath": "..\\test_tables\\output\\example_join.parquet",
    "table_name": {},
    "out_format": "parquet"
  },
  "uuid": "c84c4ea7-95dd-4713-ad00-853a9d4ac578",
  "timestamp": "2025-09-05T02:27:59.459861+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "write",
  "event_description": "Wrote table to ..\\test_tables\\output\\example_join.parquet as parquet (pyspark)",
  "meta_version": "1.0",
  "filepath": "..\\test_tables\\output\\example_join.parquet",
  "table_name": {},
  "src_format": "parquet",
  "class_type": "PipelineEvent"
}
