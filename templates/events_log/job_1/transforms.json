{
  "log_info": {
    "input_tables": [
      "salary"
    ],
    "output_tables": [
      "salary_700",
      "salary_620",
      "salary_500",
      "salary_600",
      "salary_400"
    ],
    "input_variables": [
      [
        "SALARY"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "num_input_frames": 1,
    "num_output_frames": 5
  },
  "uuid": "8b3daed3-bdd3-431b-b072-a0304a6876e1",
  "timestamp": "2025-09-04T03:49:02.096037+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "transform",
  "event_description": "Partitions a DataFrame into subtables by 'SALARY'",
  "meta_version": "1.0",
  "name": "PartitionByValue",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.31.0",
  "version_pandas": "2.3.0",
  "version_python": "3.11.9",
  "params": {
    "df": "salary"
  },
  "transform_id": "PartVal",
  "target_tables": [
    "salary_700",
    "salary_620",
    "salary_500",
    "salary_600",
    "salary_400"
  ],
  "target_variables": [
    "SALARY"
  ],
  "partition_column": "SALARY",
  "suffix_format": "_{value}",
  "class_type": "PartitionByValue"
}
{
  "log_info": {
    "input_tables": [
      "positions"
    ],
    "output_tables": [
      "positions"
    ],
    "input_variables": [
      [
        "VAR"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": [
      [
        "VAR"
      ]
    ],
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "4900f05f-e59c-42b4-9fe6-df1b988bf065",
  "timestamp": "2025-09-04T03:49:04.660865+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "transform",
  "event_description": "Removes specified variable(s) from a dataframe",
  "meta_version": "1.0",
  "name": "DropVariable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.31.0",
  "version_pandas": "2.3.0",
  "version_python": "3.11.9",
  "params": {
    "df": "positions"
  },
  "transform_id": "DropVar",
  "target_tables": [
    "positions"
  ],
  "target_variables": [
    "VAR"
  ],
  "deleted_variables": [
    "VAR"
  ],
  "class_type": "DropVariable"
}
{
  "log_info": {
    "input_tables": [
      "salary"
    ],
    "output_tables": [
      "salary"
    ],
    "input_variables": [
      [
        "SALARY",
        "AGE"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": [
      "NAME"
    ],
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "973297dd-4995-46da-b34e-4fc21cd34d39",
  "timestamp": "2025-09-04T03:49:04.825746+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "transform",
  "event_description": "Subsets a dataframe to retain only specified variable(s)",
  "meta_version": "1.0",
  "name": "SubsetTable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.31.0",
  "version_pandas": "2.3.0",
  "version_python": "3.11.9",
  "params": {
    "df": "salary"
  },
  "transform_id": "SubsetTbl",
  "target_tables": [
    "salary"
  ],
  "target_variables": [
    "SALARY",
    "AGE"
  ],
  "class_type": "SubsetTable"
}
{
  "log_info": {
    "input_tables": [
      "positions"
    ],
    "output_tables": [
      "positions"
    ],
    "input_variables": [],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "41158158-18d6-438c-932e-94192b4b11ee",
  "timestamp": "2025-09-04T03:49:04.925918+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "transform",
  "event_description": "Removes duplicate rows from a DataFrame",
  "meta_version": "1.0",
  "name": "DistinctTable",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.31.0",
  "version_pandas": "2.3.0",
  "version_python": "3.11.9",
  "params": {
    "df": "positions"
  },
  "transform_id": "DistinctTbl",
  "target_tables": [
    "positions"
  ],
  "target_variables": [],
  "class_type": "DistinctTable"
}
{
  "log_info": {
    "input_tables": [
      "salary"
    ],
    "output_tables": [
      "salary"
    ],
    "input_variables": [],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "a26c7de5-db97-449c-9508-5563209e46eb",
  "timestamp": "2025-09-04T03:49:05.811716+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "transform",
  "event_description": "Removes duplicate rows from a DataFrame",
  "meta_version": "1.0",
  "name": "DistinctTable",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.31.0",
  "version_pandas": "2.3.0",
  "version_python": "3.11.9",
  "params": {
    "df": "salary"
  },
  "transform_id": "DistinctTbl",
  "target_tables": [
    "salary"
  ],
  "target_variables": [],
  "class_type": "DistinctTable"
}
{
  "log_info": {
    "input_tables": [
      "salary"
    ],
    "output_tables": [
      "salary"
    ],
    "input_variables": [
      [
        "SALARY"
      ]
    ],
    "output_variables": [
      [
        "INCOME"
      ]
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "75154dd8-6043-43a5-b302-941957ff3b50",
  "timestamp": "2025-09-04T03:49:06.377583+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "transform",
  "event_description": "Renames specified columns in a dataframe",
  "meta_version": "1.0",
  "name": "RenameTable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.31.0",
  "version_pandas": "2.3.0",
  "version_python": "3.11.9",
  "params": {
    "df": "salary"
  },
  "transform_id": "RenmTbl",
  "target_tables": [
    "salary"
  ],
  "target_variables": [
    "SALARY"
  ],
  "rename_map": {
    "SALARY": "INCOME"
  },
  "new_names": [
    "INCOME"
  ],
  "class_type": "RenameTable"
}
{
  "log_info": {
    "input_tables": [
      "salary"
    ],
    "output_tables": [
      "salary"
    ],
    "input_variables": [],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "3d1ef096-8571-48d6-865c-b5a5b9ca11d6",
  "timestamp": "2025-09-04T03:49:06.693250+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "transform",
  "event_description": "Filters rows in a dataframe using a backend-specific condition",
  "meta_version": "1.0",
  "name": "ComplexFilter",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.31.0",
  "version_pandas": "2.3.0",
  "version_python": "3.11.9",
  "params": {
    "df": "salary"
  },
  "transform_id": "RowFilter",
  "target_tables": [
    "salary"
  ],
  "target_variables": [],
  "condition_map": {
    "pyspark": {}
  },
  "backend": "pyspark",
  "condition_string": "\"pyspark\": lambda df: df.filter(col(\"INCOME\") >= 600)",
  "class_type": "ComplexFilter"
}
{
  "log_info": {
    "input_tables": [
      "positions",
      "salary"
    ],
    "output_tables": [
      "example_join"
    ],
    "input_variables": [
      [
        "AGE"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "num_input_frames": 2,
    "num_output_frames": 1
  },
  "uuid": "cd38e5de-9796-453b-8b6d-28b528c711dc",
  "timestamp": "2025-09-04T03:49:07.171948+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "transform",
  "event_description": "Joins positions and salary on AGE (inner)",
  "meta_version": "1.0",
  "name": "JoinTable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.31.0",
  "version_pandas": "2.3.0",
  "version_python": "3.11.9",
  "params": {
    "output_table": "example_join"
  },
  "transform_id": "JoinTbl",
  "target_tables": [
    "example_join"
  ],
  "target_variables": [
    "AGE"
  ],
  "left_table": "positions",
  "right_table": "salary",
  "join_columns": [
    "AGE"
  ],
  "join_type": "inner",
  "suffixes": [
    "_left",
    "_right"
  ],
  "class_type": "JoinTable"
}
{
  "log_info": {
    "input_tables": [
      "example_join"
    ],
    "output_tables": [
      "example_join"
    ],
    "input_variables": [
      [
        "INCOME"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "de613ad7-2772-4c4a-ae9b-e6e1192b0c06",
  "timestamp": "2025-09-04T03:49:08.386984+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "transform",
  "event_description": "Filters rows where INCOME > 600",
  "meta_version": "1.0",
  "name": "SimpleFilter",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.31.0",
  "version_pandas": "2.3.0",
  "version_python": "3.11.9",
  "params": {
    "df": "example_join"
  },
  "transform_id": "SimpleFilter",
  "target_tables": [
    "example_join"
  ],
  "target_variables": [
    "INCOME"
  ],
  "column": "INCOME",
  "op": ">",
  "value": 600,
  "class_type": "SimpleFilter"
}
{
  "log_info": {
    "input_tables": [
      "example_join"
    ],
    "output_tables": [
      "example_join"
    ],
    "input_variables": [
      [
        "AGE",
        "SKILL"
      ]
    ],
    "output_variables": [
      "CONCATTED"
    ],
    "created_variables": [
      "CONCATTED"
    ],
    "renamed_variables": null,
    "removed_variables": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "69a4a63e-a508-4bd3-8be6-cf3de82b4d83",
  "timestamp": "2025-09-04T03:49:08.709096+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "transform",
  "event_description": "Concatenante multiple columns together in a dataframe",
  "meta_version": "1.0",
  "name": "ConcatColumns",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.31.0",
  "version_pandas": "2.3.0",
  "version_python": "3.11.9",
  "params": {
    "df": "example_join",
    "output_var": "CONCATTED"
  },
  "transform_id": "ConcCols",
  "target_tables": [
    "example_join"
  ],
  "target_variables": [
    "AGE",
    "SKILL"
  ],
  "separator": "_",
  "class_type": "ConcatColumns"
}
{
  "log_info": {
    "input_tables": [
      "example_join"
    ],
    "output_tables": [
      "example_join"
    ],
    "input_variables": [
      "INCOME"
    ],
    "output_variables": [
      "INCOME"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "9b4f0a31-d9b6-4f58-8386-47ec7bde09a8",
  "timestamp": "2025-09-04T03:49:09.110220+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "transform",
  "event_description": "Replaces values in 'INCOME' where INCOME >= 610 with 600",
  "meta_version": "1.0",
  "name": "ReplaceByCondition",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.31.0",
  "version_pandas": "2.3.0",
  "version_python": "3.11.9",
  "params": {
    "df": "example_join"
  },
  "transform_id": "ReplCond",
  "target_tables": [
    "example_join"
  ],
  "target_variables": [
    "INCOME"
  ],
  "column": "INCOME",
  "op": ">=",
  "value": 610,
  "replacement": 600,
  "class_type": "ReplaceByCondition"
}
{
  "log_info": {
    "input_tables": [
      "array_like"
    ],
    "output_tables": [
      "array_like"
    ],
    "input_variables": [
      "VAR3"
    ],
    "output_variables": [
      "VAR3"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "7ebdae96-90a1-495e-9c9c-6152db4f5198",
  "timestamp": "2025-09-04T03:49:09.740445+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "transform",
  "event_description": "Explodes column 'VAR3' into multiple rows",
  "meta_version": "1.0",
  "name": "ExplodeColumn",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.31.0",
  "version_pandas": "2.3.0",
  "version_python": "3.11.9",
  "params": {
    "df": "array_like"
  },
  "transform_id": "ExplodeCol",
  "target_tables": [
    "array_like"
  ],
  "target_variables": [
    "VAR3"
  ],
  "column": "VAR3",
  "sep": " ",
  "outer": true,
  "class_type": "ExplodeColumn"
}
{
  "log_info": {
    "input_tables": [
      "location",
      "state"
    ],
    "output_tables": [
      "location"
    ],
    "input_variables": [
      [
        "CITY"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "num_input_frames": 2,
    "num_output_frames": 1
  },
  "uuid": "12ad3978-eee4-4b12-aac0-0e009c7ee31b",
  "timestamp": "2025-09-04T03:49:09.878219+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "transform",
  "event_description": "Joins location and state on CITY (outer)",
  "meta_version": "1.0",
  "name": "JoinTable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.31.0",
  "version_pandas": "2.3.0",
  "version_python": "3.11.9",
  "params": {
    "output_table": "location"
  },
  "transform_id": "JoinTbl",
  "target_tables": [
    "location"
  ],
  "target_variables": [
    "CITY"
  ],
  "left_table": "location",
  "right_table": "state",
  "join_columns": [
    "CITY"
  ],
  "join_type": "outer",
  "suffixes": [
    "_left",
    "_right"
  ],
  "class_type": "JoinTable"
}
{
  "log_info": {
    "input_tables": [
      "location"
    ],
    "output_tables": [
      "location"
    ],
    "input_variables": [],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "5bbb3dfa-0669-478a-a274-59d915adea2d",
  "timestamp": "2025-09-04T03:49:10.034342+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "transform",
  "event_description": "Removes duplicate rows from a DataFrame",
  "meta_version": "1.0",
  "name": "DistinctTable",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.31.0",
  "version_pandas": "2.3.0",
  "version_python": "3.11.9",
  "params": {
    "df": "location"
  },
  "transform_id": "DistinctTbl",
  "target_tables": [
    "location"
  ],
  "target_variables": [],
  "class_type": "DistinctTable"
}
{
  "log_info": {
    "input_tables": [
      "location",
      "example_join"
    ],
    "output_tables": [
      "final"
    ],
    "input_variables": [
      [
        "NAME"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "num_input_frames": 2,
    "num_output_frames": 1
  },
  "uuid": "6bf31e88-d619-40c4-a78a-cccda2f0f22c",
  "timestamp": "2025-09-04T03:49:10.532864+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "transform",
  "event_description": "Joins location and example_join on NAME (outer)",
  "meta_version": "1.0",
  "name": "JoinTable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.31.0",
  "version_pandas": "2.3.0",
  "version_python": "3.11.9",
  "params": {
    "output_table": "final"
  },
  "transform_id": "JoinTbl",
  "target_tables": [
    "final"
  ],
  "target_variables": [
    "NAME"
  ],
  "left_table": "location",
  "right_table": "example_join",
  "join_columns": [
    "NAME"
  ],
  "join_type": "outer",
  "suffixes": [
    "_left",
    "_right"
  ],
  "class_type": "JoinTable"
}
