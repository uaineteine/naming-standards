{
  "log_info": {
    "filepath": "../test_tables/salary.csv",
    "table_name": "",
    "src_format": "csv"
  },
  "uuid": "c3f861da-55d2-4f43-9a58-54ac9dd09302",
  "timestamp": "2025-09-04T03:49:01.526616+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "load",
  "event_description": "Loaded  from ../test_tables/salary.csv",
  "meta_version": "1.0",
  "class_type": "PipelineEvent"
}
{
  "log_info": {
    "input_tables": [
      "salary"
    ],
    "output_tables": [
      "salary"
    ],
    "input_variables": [
      [
        "SALARY",
        "AGE"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": [
      "NAME"
    ],
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "2add05bb-aeb0-4c5b-98a0-ba8c22c1aa57",
  "timestamp": "2025-09-04T03:49:04.825746+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "transform",
  "event_description": "Subsets a dataframe to retain only specified variable(s)",
  "meta_version": "1.0",
  "name": "SubsetTable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.31.0",
  "version_pandas": "2.3.0",
  "version_python": "3.11.9",
  "params": {
    "df": "salary"
  },
  "transform_id": "SubsetTbl",
  "target_tables": [
    "salary"
  ],
  "target_variables": [
    "SALARY",
    "AGE"
  ],
  "class_type": "SubsetTable"
}
{
  "log_info": {
    "input_tables": [
      "salary"
    ],
    "output_tables": [
      "salary"
    ],
    "input_variables": [],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "de8fa858-3ff0-4374-876a-f60daee8a046",
  "timestamp": "2025-09-04T03:49:05.811716+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "transform",
  "event_description": "Removes duplicate rows from a DataFrame",
  "meta_version": "1.0",
  "name": "DistinctTable",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.31.0",
  "version_pandas": "2.3.0",
  "version_python": "3.11.9",
  "params": {
    "df": "salary"
  },
  "transform_id": "DistinctTbl",
  "target_tables": [
    "salary"
  ],
  "target_variables": [],
  "class_type": "DistinctTable"
}
{
  "log_info": {
    "input_tables": [
      "salary"
    ],
    "output_tables": [
      "salary"
    ],
    "input_variables": [
      [
        "SALARY"
      ]
    ],
    "output_variables": [
      [
        "INCOME"
      ]
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "81f400cc-f215-4e6c-a5a7-38ddd0db3334",
  "timestamp": "2025-09-04T03:49:06.377583+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "transform",
  "event_description": "Renames specified columns in a dataframe",
  "meta_version": "1.0",
  "name": "RenameTable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.31.0",
  "version_pandas": "2.3.0",
  "version_python": "3.11.9",
  "params": {
    "df": "salary"
  },
  "transform_id": "RenmTbl",
  "target_tables": [
    "salary"
  ],
  "target_variables": [
    "SALARY"
  ],
  "rename_map": {
    "SALARY": "INCOME"
  },
  "new_names": [
    "INCOME"
  ],
  "class_type": "RenameTable"
}
{
  "log_info": {
    "input_tables": [
      "salary"
    ],
    "output_tables": [
      "salary"
    ],
    "input_variables": [],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "f3d8d015-38aa-4288-b0ce-594d7e7b3d8a",
  "timestamp": "2025-09-04T03:49:06.693250+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "transform",
  "event_description": "Filters rows in a dataframe using a backend-specific condition",
  "meta_version": "1.0",
  "name": "ComplexFilter",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.31.0",
  "version_pandas": "2.3.0",
  "version_python": "3.11.9",
  "params": {
    "df": "salary"
  },
  "transform_id": "RowFilter",
  "target_tables": [
    "salary"
  ],
  "target_variables": [],
  "condition_map": {
    "pyspark": {}
  },
  "backend": "pyspark",
  "condition_string": "\"pyspark\": lambda df: df.filter(col(\"INCOME\") >= 600)",
  "class_type": "ComplexFilter"
}
{
  "log_info": {
    "filepath": "..\\test_tables\\output\\salary.parquet",
    "table_name": {},
    "out_format": "parquet"
  },
  "uuid": "7bfe0352-7fdd-44ec-b465-ea65a45f493e",
  "timestamp": "2025-09-04T03:49:14.343565+00:00",
  "executed_user": "Daniel Stamer-Squair",
  "event_type": "write",
  "event_description": "Wrote table to ..\\test_tables\\output\\salary.parquet as parquet (pyspark)",
  "meta_version": "1.0",
  "filepath": "..\\test_tables\\output\\salary.parquet",
  "table_name": {},
  "src_format": "parquet",
  "class_type": "PipelineEvent"
}
